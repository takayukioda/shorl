swagger: "2.0"
info:
  title: Shorl
  description: Shorten any url and track its clicks
  termsOfService: ""
  contact:
    name: Takayuki Oda
    url: https://github.com/takayukioda
    email: takayuki@odashi.me
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.0.0"
host: api.loc.al
basePath: "/v1"
schemes: 
  - http
  - https
produces:
  - "application/json"
paths:
  /users:
    post:
      summary: New User
      description: |
        Endpoint to create new user
      parameters:
        - name: name
          in: formData
          required: true
          type: string
        - name: email
          in: formData
          required: true
          type: string
        - name: password
          in: formData
          required: true
          type: string
      responses:
        200:
          description: A created user
          schema:
            $ref: '#/definitions/User'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/4xxError'
        default:
          description: Unexpected error
          schema: 
            $ref: '#/definitions/Error'
      tags:
        - User
  /auth/token:
    post:
      summary: Generate authentication resource
      parameters:
        - name: name
          type: string
          in: formData
          required: true
        - name: password
          type: string
          in: formData
          required: true
      responses:
        200:
          description: Get user information and auth token
          schema:
            $ref: '#/definitions/Auth'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Auth
  /me:
    get:
      summary: Authorized User
      description: |
        Endpoint to show authorized user information
      responses:
        200:
          description: An authorized user information
          schema:
            $ref: '#/definitions/User'
        403:
          description: Forbidden to get data, mainly because of not authorized
          schema:
            $ref: '#/definitions/4xxError'            
        default:
          description: Unexpected error
          schema: 
            $ref: '#/definitions/Error'
      tags:
        - User
  /urls:
    get:
      summary: List of shortened urls
      description: |
         This endpoint returns list of urls that has been shortened by authorized user
      parameters:
        - name: limit
          in: query
          required: false
          type: number
          format: int32
        - name: offset
          in: query
          required: false
          type: number
          format: int32
      responses:
        200:
          description: An array or urls
          schema:
            type: array
            items:
              $ref: '#/definitions/Url'
        403:
          description: Forbidden to get data, mainly because of unauthorized request
          schema:
            $ref: '#/definitions/4xxError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Url
  /urls/short:
    get:
      summary: Get shortened url
      description: |
        This endpoint returns url which is shortened.
        All the parameters should be URL encoded.
      parameters:
        - name: url
          in: query
          required: true
          type: string
      responses:
        200:
          description: Shortened url, include original url data as well
          schema:
            $ref: '#/definitions/Url'
        400:
          description: Invalid parameter has given
          schema:
            $ref: '#/definitions/4xxError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Url
  /urls/long:
    get:
      summary: Get shortened url
      description: |
        This endpoint receives shortened url and returns original url. All parameters should be URL encoded.
        Either of url or hash is required as parameter.
        If both of parameters were given to this endpoint, parameter of hash has stronger priority.
      parameters:
        - name: hash
          in: query
          required: false
          type: string
        - name: url
          in: query
          required: false
          type: string
      responses:
        200:
          description: original url, include shorten url data as well
          schema:
            $ref: '#/definitions/Url'
        400:
          description: Invalid parameter has given
          schema:
            $ref: '#/definitions/4xxError'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Url
definitions:
  Auth:
    type: object
    properties:
      user_id:
        type: integer
        format: int64
      token:
        type: string
        description: Access token to prove user has a permission to use API
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique identifier representing a specific user. This value is automatically generated, and cannot be changed by neither user nor system.
      name:
        type: string
        description: Unique string representing a specific user. This value is decided by user and user can update this value anytime unless the name is unique. User's name will be used in login.
      email:
        type: string
        description: Unique string that belongs to user. This value will be used for notifications.
      email_is_verified:
        type: boolean
        description: Shows whether email has been verified or not. This value will become true after user click the verification link.
  Url:
    type: object
    properties:
      id:
        type: integer
        format: int64
      original_url:
        type: string
      shorten_url:
        type: string
      hash:
        type: string
      original_hash:
        type: string
      shorten_by:
        type: integer
        format: int64
        description: Combination of original_url and shorten_by should be unique to avoid generate countless url for same url
  Error:
    type: object
    properties:
      status_code:
        type: number
      status_text:
        type: string
      message:
        type: string
  4xxError:
    type: object
    properties:
      status_code:
        type: number
        description: HTTP status code
        enum:
          - 400
          - 403
          - 404
      status_text:
        type: string
      message:
        type: string
